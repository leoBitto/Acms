# Generated by Django 3.2.9 on 2021-12-26 22:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CSS_id', models.CharField(blank=True, default='', help_text='set id of div', max_length=50)),
                ('CSS_classes', models.TextField(blank=True, default='', help_text='additional css classes')),
                ('width', models.IntegerField(blank=True, default=100, null=True)),
                ('height', models.IntegerField(blank=True, default=100, null=True)),
                ('padding_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('padding', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('margin_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('margin', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('breakpoint', models.CharField(blank=True, choices=[('-sm', 'sm'), ('-md', 'md'), ('-lg', 'lg'), ('-xl', 'xl'), ('-xxl', 'xxl'), ('-fluid', 'fluid'), ('', 'no breakpoint')], default='', help_text='breakpoint work from the point indicated forward meaning that the content is 100percent until the breakpoint', max_length=10)),
                ('bg_image', models.ImageField(blank=True, default='', upload_to='')),
                ('bg_color', models.CharField(blank=True, choices=[('bg-primary', 'blue'), ('bg-secondary', 'grey'), ('bg-success', 'green'), ('bg-danger', 'red'), ('bg-warning', 'yellow'), ('bg-info', 'lightblue'), ('bg-light', 'light'), ('bg-dark', 'dark'), ('bg-body', 'body'), ('bg-white', 'white'), ('bg-transparent', 'transparent'), ('', 'no bg color')], default='', max_length=15)),
                ('bg_gradient', models.CharField(blank=True, choices=[('.bg-gradient', 'bottom-top gradient'), ('', 'no gradient')], default='', max_length=20)),
                ('shadow', models.CharField(blank=True, choices=[('shadow-sm', 'small shadow'), ('shadow', 'normal shadow'), ('shadow-lg', 'large shadow'), ('', 'no value')], default='', max_length=20)),
                ('position', models.CharField(blank=True, choices=[('position-static', 'static'), ('position-relative', 'relative'), ('position-absolute', 'absolute'), ('position-fixed', 'fixed'), ('position-sticky', 'sticky')], default='', max_length=20)),
                ('top', models.IntegerField(blank=True, default=0, null=True)),
                ('left', models.IntegerField(blank=True, default=0, null=True)),
                ('down', models.IntegerField(blank=True, default=0, null=True)),
                ('right', models.IntegerField(blank=True, default=0, null=True)),
                ('order', models.CharField(blank=True, choices=[('order-0', '0'), ('order-1', '1'), ('order-2', '2'), ('order-3', '3'), ('order-4', '4'), ('order-5', '5'), ('', 'no order')], default='order-0', max_length=20)),
                ('align_self', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            align the item on the\n            vertical axis in a flex container\n        ', max_length=10)),
                ('visibility', models.CharField(blank=True, choices=[('visible', 'visible'), ('invisible', 'invisible'), ('', 'no value')], default='', max_length=15)),
                ('display', models.CharField(blank=True, choices=[('-none', 'none'), ('-inline', 'inline'), ('-block', 'block'), ('-flex', 'flex')], default='', max_length=50)),
                ('inline', models.CharField(blank=True, choices=[('', 'not inline'), ('-inline', 'inline')], default='', max_length=10)),
                ('direction', models.CharField(blank=True, choices=[('column', 'column'), ('column-reverse', 'column-reverse'), ('row', 'row'), ('row-reverse', 'row-reverse')], default='', max_length=20)),
                ('flex_wrap', models.CharField(blank=True, choices=[('-wrap', 'wrap'), ('-nowrap', 'no wrap'), ('-wrap-reverse', 'wrap reverse')], default='', help_text='\n            wrap of the content inside flex container\n            in one row if no wrap\n            in multiple rows in wrap\n            multiple rows from bottom in wrap reverse\n        ', max_length=15)),
                ('justify_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-between', 'between'), ('-evenly', 'evenly')], default='', help_text='\n            alignment of content on the main axis:\n            x if direction is row;\n            y if direction is column.\n        ', max_length=10)),
                ('align_items', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            alignment of content on the cross axis:\n            y if direction is row;\n            x if direction is column.\n        ', max_length=10)),
                ('align_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-stretch', 'stretch')], default='', help_text='\n            align all the  content\n            on the cross axis if there is space \n        ', max_length=10)),
                ('flex_grow', models.IntegerField(blank=True, default=1, help_text='\n        \n        ', null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CSS_id', models.CharField(blank=True, default='', help_text='set id of div', max_length=50)),
                ('CSS_classes', models.TextField(blank=True, default='', help_text='additional css classes')),
                ('width', models.IntegerField(blank=True, default=100, null=True)),
                ('height', models.IntegerField(blank=True, default=100, null=True)),
                ('padding_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('padding', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('margin_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('margin', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('breakpoint', models.CharField(blank=True, choices=[('-sm', 'sm'), ('-md', 'md'), ('-lg', 'lg'), ('-xl', 'xl'), ('-xxl', 'xxl'), ('-fluid', 'fluid'), ('', 'no breakpoint')], default='', help_text='breakpoint work from the point indicated forward meaning that the content is 100percent until the breakpoint', max_length=10)),
                ('bg_image', models.ImageField(blank=True, default='', upload_to='')),
                ('bg_color', models.CharField(blank=True, choices=[('bg-primary', 'blue'), ('bg-secondary', 'grey'), ('bg-success', 'green'), ('bg-danger', 'red'), ('bg-warning', 'yellow'), ('bg-info', 'lightblue'), ('bg-light', 'light'), ('bg-dark', 'dark'), ('bg-body', 'body'), ('bg-white', 'white'), ('bg-transparent', 'transparent'), ('', 'no bg color')], default='', max_length=15)),
                ('bg_gradient', models.CharField(blank=True, choices=[('.bg-gradient', 'bottom-top gradient'), ('', 'no gradient')], default='', max_length=20)),
                ('shadow', models.CharField(blank=True, choices=[('shadow-sm', 'small shadow'), ('shadow', 'normal shadow'), ('shadow-lg', 'large shadow'), ('', 'no value')], default='', max_length=20)),
                ('position', models.CharField(blank=True, choices=[('position-static', 'static'), ('position-relative', 'relative'), ('position-absolute', 'absolute'), ('position-fixed', 'fixed'), ('position-sticky', 'sticky')], default='', max_length=20)),
                ('top', models.IntegerField(blank=True, default=0, null=True)),
                ('left', models.IntegerField(blank=True, default=0, null=True)),
                ('down', models.IntegerField(blank=True, default=0, null=True)),
                ('right', models.IntegerField(blank=True, default=0, null=True)),
                ('order', models.CharField(blank=True, choices=[('order-0', '0'), ('order-1', '1'), ('order-2', '2'), ('order-3', '3'), ('order-4', '4'), ('order-5', '5'), ('', 'no order')], default='order-0', max_length=20)),
                ('align_self', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            align the item on the\n            vertical axis in a flex container\n        ', max_length=10)),
                ('visibility', models.CharField(blank=True, choices=[('visible', 'visible'), ('invisible', 'invisible'), ('', 'no value')], default='', max_length=15)),
                ('display', models.CharField(blank=True, choices=[('-none', 'none'), ('-inline', 'inline'), ('-block', 'block'), ('-flex', 'flex')], default='', max_length=50)),
                ('inline', models.CharField(blank=True, choices=[('', 'not inline'), ('-inline', 'inline')], default='', max_length=10)),
                ('direction', models.CharField(blank=True, choices=[('column', 'column'), ('column-reverse', 'column-reverse'), ('row', 'row'), ('row-reverse', 'row-reverse')], default='', max_length=20)),
                ('flex_wrap', models.CharField(blank=True, choices=[('-wrap', 'wrap'), ('-nowrap', 'no wrap'), ('-wrap-reverse', 'wrap reverse')], default='', help_text='\n            wrap of the content inside flex container\n            in one row if no wrap\n            in multiple rows in wrap\n            multiple rows from bottom in wrap reverse\n        ', max_length=15)),
                ('justify_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-between', 'between'), ('-evenly', 'evenly')], default='', help_text='\n            alignment of content on the main axis:\n            x if direction is row;\n            y if direction is column.\n        ', max_length=10)),
                ('align_items', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            alignment of content on the cross axis:\n            y if direction is row;\n            x if direction is column.\n        ', max_length=10)),
                ('align_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-stretch', 'stretch')], default='', help_text='\n            align all the  content\n            on the cross axis if there is space \n        ', max_length=10)),
                ('flex_grow', models.IntegerField(blank=True, default=1, help_text='\n        \n        ', null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('text_l', models.TextField(blank=True, default='', null=True)),
                ('text_r', models.TextField(blank=True, default='', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CSS_id', models.CharField(blank=True, default='', help_text='set id of div', max_length=50)),
                ('CSS_classes', models.TextField(blank=True, default='', help_text='additional css classes')),
                ('width', models.IntegerField(blank=True, default=100, null=True)),
                ('height', models.IntegerField(blank=True, default=100, null=True)),
                ('padding_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('padding', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('margin_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('margin', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('breakpoint', models.CharField(blank=True, choices=[('-sm', 'sm'), ('-md', 'md'), ('-lg', 'lg'), ('-xl', 'xl'), ('-xxl', 'xxl'), ('-fluid', 'fluid'), ('', 'no breakpoint')], default='', help_text='breakpoint work from the point indicated forward meaning that the content is 100percent until the breakpoint', max_length=10)),
                ('bg_image', models.ImageField(blank=True, default='', upload_to='')),
                ('bg_color', models.CharField(blank=True, choices=[('bg-primary', 'blue'), ('bg-secondary', 'grey'), ('bg-success', 'green'), ('bg-danger', 'red'), ('bg-warning', 'yellow'), ('bg-info', 'lightblue'), ('bg-light', 'light'), ('bg-dark', 'dark'), ('bg-body', 'body'), ('bg-white', 'white'), ('bg-transparent', 'transparent'), ('', 'no bg color')], default='', max_length=15)),
                ('bg_gradient', models.CharField(blank=True, choices=[('.bg-gradient', 'bottom-top gradient'), ('', 'no gradient')], default='', max_length=20)),
                ('shadow', models.CharField(blank=True, choices=[('shadow-sm', 'small shadow'), ('shadow', 'normal shadow'), ('shadow-lg', 'large shadow'), ('', 'no value')], default='', max_length=20)),
                ('position', models.CharField(blank=True, choices=[('position-static', 'static'), ('position-relative', 'relative'), ('position-absolute', 'absolute'), ('position-fixed', 'fixed'), ('position-sticky', 'sticky')], default='', max_length=20)),
                ('top', models.IntegerField(blank=True, default=0, null=True)),
                ('left', models.IntegerField(blank=True, default=0, null=True)),
                ('down', models.IntegerField(blank=True, default=0, null=True)),
                ('right', models.IntegerField(blank=True, default=0, null=True)),
                ('order', models.CharField(blank=True, choices=[('order-0', '0'), ('order-1', '1'), ('order-2', '2'), ('order-3', '3'), ('order-4', '4'), ('order-5', '5'), ('', 'no order')], default='order-0', max_length=20)),
                ('align_self', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            align the item on the\n            vertical axis in a flex container\n        ', max_length=10)),
                ('visibility', models.CharField(blank=True, choices=[('visible', 'visible'), ('invisible', 'invisible'), ('', 'no value')], default='', max_length=15)),
                ('display', models.CharField(blank=True, choices=[('-none', 'none'), ('-inline', 'inline'), ('-block', 'block'), ('-flex', 'flex')], default='', max_length=50)),
                ('url', models.ImageField(blank=True, null=True, upload_to='')),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Navbar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CSS_id', models.CharField(blank=True, default='', help_text='set id of div', max_length=50)),
                ('CSS_classes', models.TextField(blank=True, default='', help_text='additional css classes')),
                ('width', models.IntegerField(blank=True, default=100, null=True)),
                ('height', models.IntegerField(blank=True, default=100, null=True)),
                ('padding_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('padding', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('margin_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('margin', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('breakpoint', models.CharField(blank=True, choices=[('-sm', 'sm'), ('-md', 'md'), ('-lg', 'lg'), ('-xl', 'xl'), ('-xxl', 'xxl'), ('-fluid', 'fluid'), ('', 'no breakpoint')], default='', help_text='breakpoint work from the point indicated forward meaning that the content is 100percent until the breakpoint', max_length=10)),
                ('bg_image', models.ImageField(blank=True, default='', upload_to='')),
                ('bg_color', models.CharField(blank=True, choices=[('bg-primary', 'blue'), ('bg-secondary', 'grey'), ('bg-success', 'green'), ('bg-danger', 'red'), ('bg-warning', 'yellow'), ('bg-info', 'lightblue'), ('bg-light', 'light'), ('bg-dark', 'dark'), ('bg-body', 'body'), ('bg-white', 'white'), ('bg-transparent', 'transparent'), ('', 'no bg color')], default='', max_length=15)),
                ('bg_gradient', models.CharField(blank=True, choices=[('.bg-gradient', 'bottom-top gradient'), ('', 'no gradient')], default='', max_length=20)),
                ('shadow', models.CharField(blank=True, choices=[('shadow-sm', 'small shadow'), ('shadow', 'normal shadow'), ('shadow-lg', 'large shadow'), ('', 'no value')], default='', max_length=20)),
                ('position', models.CharField(blank=True, choices=[('position-static', 'static'), ('position-relative', 'relative'), ('position-absolute', 'absolute'), ('position-fixed', 'fixed'), ('position-sticky', 'sticky')], default='', max_length=20)),
                ('top', models.IntegerField(blank=True, default=0, null=True)),
                ('left', models.IntegerField(blank=True, default=0, null=True)),
                ('down', models.IntegerField(blank=True, default=0, null=True)),
                ('right', models.IntegerField(blank=True, default=0, null=True)),
                ('order', models.CharField(blank=True, choices=[('order-0', '0'), ('order-1', '1'), ('order-2', '2'), ('order-3', '3'), ('order-4', '4'), ('order-5', '5'), ('', 'no order')], default='order-0', max_length=20)),
                ('align_self', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            align the item on the\n            vertical axis in a flex container\n        ', max_length=10)),
                ('visibility', models.CharField(blank=True, choices=[('visible', 'visible'), ('invisible', 'invisible'), ('', 'no value')], default='', max_length=15)),
                ('display', models.CharField(blank=True, choices=[('-none', 'none'), ('-inline', 'inline'), ('-block', 'block'), ('-flex', 'flex')], default='', max_length=50)),
                ('inline', models.CharField(blank=True, choices=[('', 'not inline'), ('-inline', 'inline')], default='', max_length=10)),
                ('direction', models.CharField(blank=True, choices=[('column', 'column'), ('column-reverse', 'column-reverse'), ('row', 'row'), ('row-reverse', 'row-reverse')], default='', max_length=20)),
                ('flex_wrap', models.CharField(blank=True, choices=[('-wrap', 'wrap'), ('-nowrap', 'no wrap'), ('-wrap-reverse', 'wrap reverse')], default='', help_text='\n            wrap of the content inside flex container\n            in one row if no wrap\n            in multiple rows in wrap\n            multiple rows from bottom in wrap reverse\n        ', max_length=15)),
                ('justify_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-between', 'between'), ('-evenly', 'evenly')], default='', help_text='\n            alignment of content on the main axis:\n            x if direction is row;\n            y if direction is column.\n        ', max_length=10)),
                ('align_items', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            alignment of content on the cross axis:\n            y if direction is row;\n            x if direction is column.\n        ', max_length=10)),
                ('align_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-stretch', 'stretch')], default='', help_text='\n            align all the  content\n            on the cross axis if there is space \n        ', max_length=10)),
                ('flex_grow', models.IntegerField(blank=True, default=1, help_text='\n        \n        ', null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('brand_name', models.CharField(blank=True, help_text='this is the name of the brand', max_length=25, null=True)),
                ('navbar_color', models.CharField(blank=True, choices=[('navbar-dark', 'dark'), ('navbar-light', 'light')], help_text='\n            this is the color of the navbar, the object\n            accept also the bg colors of css\n            this helps you create contrast between the \n            bg color and the text\n            ', max_length=25, null=True)),
                ('placement', models.CharField(blank=True, choices=[('', 'default position'), ('fixed-top', 'fixed top'), ('fixed-bottom', 'fixed bottom'), ('sticky-top', 'sticky top')], max_length=20, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, max_length=100, unique=True)),
                ('name', models.CharField(blank=True, default=models.CharField(blank=True, max_length=100, unique=True), max_length=100, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('footer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Acms.footer')),
                ('navbar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Acms.navbar')),
            ],
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CSS_id', models.CharField(blank=True, default='', help_text='set id of div', max_length=50)),
                ('CSS_classes', models.TextField(blank=True, default='', help_text='additional css classes')),
                ('width', models.IntegerField(blank=True, default=100, null=True)),
                ('height', models.IntegerField(blank=True, default=100, null=True)),
                ('padding_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('padding', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('margin_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('margin', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('breakpoint', models.CharField(blank=True, choices=[('-sm', 'sm'), ('-md', 'md'), ('-lg', 'lg'), ('-xl', 'xl'), ('-xxl', 'xxl'), ('-fluid', 'fluid'), ('', 'no breakpoint')], default='', help_text='breakpoint work from the point indicated forward meaning that the content is 100percent until the breakpoint', max_length=10)),
                ('bg_image', models.ImageField(blank=True, default='', upload_to='')),
                ('bg_color', models.CharField(blank=True, choices=[('bg-primary', 'blue'), ('bg-secondary', 'grey'), ('bg-success', 'green'), ('bg-danger', 'red'), ('bg-warning', 'yellow'), ('bg-info', 'lightblue'), ('bg-light', 'light'), ('bg-dark', 'dark'), ('bg-body', 'body'), ('bg-white', 'white'), ('bg-transparent', 'transparent'), ('', 'no bg color')], default='', max_length=15)),
                ('bg_gradient', models.CharField(blank=True, choices=[('.bg-gradient', 'bottom-top gradient'), ('', 'no gradient')], default='', max_length=20)),
                ('shadow', models.CharField(blank=True, choices=[('shadow-sm', 'small shadow'), ('shadow', 'normal shadow'), ('shadow-lg', 'large shadow'), ('', 'no value')], default='', max_length=20)),
                ('position', models.CharField(blank=True, choices=[('position-static', 'static'), ('position-relative', 'relative'), ('position-absolute', 'absolute'), ('position-fixed', 'fixed'), ('position-sticky', 'sticky')], default='', max_length=20)),
                ('top', models.IntegerField(blank=True, default=0, null=True)),
                ('left', models.IntegerField(blank=True, default=0, null=True)),
                ('down', models.IntegerField(blank=True, default=0, null=True)),
                ('right', models.IntegerField(blank=True, default=0, null=True)),
                ('order', models.CharField(blank=True, choices=[('order-0', '0'), ('order-1', '1'), ('order-2', '2'), ('order-3', '3'), ('order-4', '4'), ('order-5', '5'), ('', 'no order')], default='order-0', max_length=20)),
                ('align_self', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            align the item on the\n            vertical axis in a flex container\n        ', max_length=10)),
                ('visibility', models.CharField(blank=True, choices=[('visible', 'visible'), ('invisible', 'invisible'), ('', 'no value')], default='', max_length=15)),
                ('display', models.CharField(blank=True, choices=[('-none', 'none'), ('-inline', 'inline'), ('-block', 'block'), ('-flex', 'flex')], default='', max_length=50)),
                ('txt', models.TextField(blank=True, null=True)),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('color', models.CharField(blank=True, choices=[('-primary', 'blue'), ('-secondary', 'grey'), ('-success', 'green'), ('-danger', 'red'), ('-warning', 'yellow'), ('-info', 'lightblue'), ('-light', 'light'), ('-dark', 'dark'), ('-body', 'body'), ('-muted', 'muted'), ('-white', 'white'), ('-black', 'black')], max_length=25, null=True)),
                ('overflow', models.CharField(blank=True, choices=[('-auto', 'auto'), ('-hidden', 'hidden'), ('-visible', 'visible'), ('-scroll', 'scroll')], max_length=15, null=True)),
                ('alignment', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end')], max_length=15, null=True)),
                ('size', models.CharField(blank=True, choices=[('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-6', '6')], max_length=15, null=True)),
                ('weight', models.CharField(blank=True, choices=[('-bold', 'bold'), ('-bolder', 'bolder'), ('-normal', 'normal'), ('-light', 'light'), ('-lighter', 'lighter')], max_length=15, null=True)),
                ('italics', models.CharField(blank=True, choices=[('-italic', 'italic'), ('-normal', 'normal')], max_length=15, null=True)),
                ('line_height', models.CharField(blank=True, choices=[('-sm', 'small'), ('-base', 'normal'), ('-lg', 'large')], max_length=5, null=True)),
                ('text_decoration', models.CharField(blank=True, choices=[('-underline', 'underline'), ('-line-through', 'line through'), ('-none', 'none')], max_length=15, null=True)),
                ('vertical_align', models.CharField(blank=True, choices=[('-baseline', 'baseline'), ('-top', 'top'), ('-middle', 'middle'), ('-bottom', 'bottom'), ('-text-top', 'text-top'), ('-text-bottom', 'text-bottom')], max_length=15, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CSS_id', models.CharField(blank=True, default='', help_text='set id of div', max_length=50)),
                ('CSS_classes', models.TextField(blank=True, default='', help_text='additional css classes')),
                ('width', models.IntegerField(blank=True, default=100, null=True)),
                ('height', models.IntegerField(blank=True, default=100, null=True)),
                ('padding_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('padding', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('margin_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('margin', models.CharField(blank=True, choices=[('-0', '0'), ('-1', '1'), ('-2', '2'), ('-3', '3'), ('-4', '4'), ('-5', '5'), ('-auto', 'auto')], default='-auto', max_length=5, null=True)),
                ('breakpoint', models.CharField(blank=True, choices=[('-sm', 'sm'), ('-md', 'md'), ('-lg', 'lg'), ('-xl', 'xl'), ('-xxl', 'xxl'), ('-fluid', 'fluid'), ('', 'no breakpoint')], default='', help_text='breakpoint work from the point indicated forward meaning that the content is 100percent until the breakpoint', max_length=10)),
                ('bg_image', models.ImageField(blank=True, default='', upload_to='')),
                ('bg_color', models.CharField(blank=True, choices=[('bg-primary', 'blue'), ('bg-secondary', 'grey'), ('bg-success', 'green'), ('bg-danger', 'red'), ('bg-warning', 'yellow'), ('bg-info', 'lightblue'), ('bg-light', 'light'), ('bg-dark', 'dark'), ('bg-body', 'body'), ('bg-white', 'white'), ('bg-transparent', 'transparent'), ('', 'no bg color')], default='', max_length=15)),
                ('bg_gradient', models.CharField(blank=True, choices=[('.bg-gradient', 'bottom-top gradient'), ('', 'no gradient')], default='', max_length=20)),
                ('shadow', models.CharField(blank=True, choices=[('shadow-sm', 'small shadow'), ('shadow', 'normal shadow'), ('shadow-lg', 'large shadow'), ('', 'no value')], default='', max_length=20)),
                ('position', models.CharField(blank=True, choices=[('position-static', 'static'), ('position-relative', 'relative'), ('position-absolute', 'absolute'), ('position-fixed', 'fixed'), ('position-sticky', 'sticky')], default='', max_length=20)),
                ('top', models.IntegerField(blank=True, default=0, null=True)),
                ('left', models.IntegerField(blank=True, default=0, null=True)),
                ('down', models.IntegerField(blank=True, default=0, null=True)),
                ('right', models.IntegerField(blank=True, default=0, null=True)),
                ('order', models.CharField(blank=True, choices=[('order-0', '0'), ('order-1', '1'), ('order-2', '2'), ('order-3', '3'), ('order-4', '4'), ('order-5', '5'), ('', 'no order')], default='order-0', max_length=20)),
                ('align_self', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            align the item on the\n            vertical axis in a flex container\n        ', max_length=10)),
                ('visibility', models.CharField(blank=True, choices=[('visible', 'visible'), ('invisible', 'invisible'), ('', 'no value')], default='', max_length=15)),
                ('display', models.CharField(blank=True, choices=[('-none', 'none'), ('-inline', 'inline'), ('-block', 'block'), ('-flex', 'flex')], default='', max_length=50)),
                ('inline', models.CharField(blank=True, choices=[('', 'not inline'), ('-inline', 'inline')], default='', max_length=10)),
                ('direction', models.CharField(blank=True, choices=[('column', 'column'), ('column-reverse', 'column-reverse'), ('row', 'row'), ('row-reverse', 'row-reverse')], default='', max_length=20)),
                ('flex_wrap', models.CharField(blank=True, choices=[('-wrap', 'wrap'), ('-nowrap', 'no wrap'), ('-wrap-reverse', 'wrap reverse')], default='', help_text='\n            wrap of the content inside flex container\n            in one row if no wrap\n            in multiple rows in wrap\n            multiple rows from bottom in wrap reverse\n        ', max_length=15)),
                ('justify_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-between', 'between'), ('-evenly', 'evenly')], default='', help_text='\n            alignment of content on the main axis:\n            x if direction is row;\n            y if direction is column.\n        ', max_length=10)),
                ('align_items', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            alignment of content on the cross axis:\n            y if direction is row;\n            x if direction is column.\n        ', max_length=10)),
                ('align_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-stretch', 'stretch')], default='', help_text='\n            align all the  content\n            on the cross axis if there is space \n        ', max_length=10)),
                ('flex_grow', models.IntegerField(blank=True, default=1, help_text='\n        \n        ', null=True)),
                ('name', models.CharField(max_length=100, null=True)),
                ('page', models.ManyToManyField(to='Acms.Page')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Overlay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CSS_id', models.CharField(blank=True, default='', help_text='set id of div', max_length=50)),
                ('CSS_classes', models.TextField(blank=True, default='', help_text='additional css classes')),
                ('padding_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('margin_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('breakpoint', models.CharField(blank=True, choices=[('-sm', 'sm'), ('-md', 'md'), ('-lg', 'lg'), ('-xl', 'xl'), ('-xxl', 'xxl'), ('-fluid', 'fluid'), ('', 'no breakpoint')], default='', help_text='breakpoint work from the point indicated forward meaning that the content is 100percent until the breakpoint', max_length=10)),
                ('bg_image', models.ImageField(blank=True, default='', upload_to='')),
                ('bg_color', models.CharField(blank=True, choices=[('bg-primary', 'blue'), ('bg-secondary', 'grey'), ('bg-success', 'green'), ('bg-danger', 'red'), ('bg-warning', 'yellow'), ('bg-info', 'lightblue'), ('bg-light', 'light'), ('bg-dark', 'dark'), ('bg-body', 'body'), ('bg-white', 'white'), ('bg-transparent', 'transparent'), ('', 'no bg color')], default='', max_length=15)),
                ('bg_gradient', models.CharField(blank=True, choices=[('.bg-gradient', 'bottom-top gradient'), ('', 'no gradient')], default='', max_length=20)),
                ('shadow', models.CharField(blank=True, choices=[('shadow-sm', 'small shadow'), ('shadow', 'normal shadow'), ('shadow-lg', 'large shadow'), ('', 'no value')], default='', max_length=20)),
                ('position', models.CharField(blank=True, choices=[('position-static', 'static'), ('position-relative', 'relative'), ('position-absolute', 'absolute'), ('position-fixed', 'fixed'), ('position-sticky', 'sticky')], default='', max_length=20)),
                ('top', models.IntegerField(blank=True, default=0, null=True)),
                ('left', models.IntegerField(blank=True, default=0, null=True)),
                ('down', models.IntegerField(blank=True, default=0, null=True)),
                ('right', models.IntegerField(blank=True, default=0, null=True)),
                ('order', models.CharField(blank=True, choices=[('order-0', '0'), ('order-1', '1'), ('order-2', '2'), ('order-3', '3'), ('order-4', '4'), ('order-5', '5'), ('', 'no order')], default='order-0', max_length=20)),
                ('align_self', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            align the item on the\n            vertical axis in a flex container\n        ', max_length=10)),
                ('visibility', models.CharField(blank=True, choices=[('visible', 'visible'), ('invisible', 'invisible'), ('', 'no value')], default='', max_length=15)),
                ('display', models.CharField(blank=True, choices=[('-none', 'none'), ('-inline', 'inline'), ('-block', 'block'), ('-flex', 'flex')], default='', max_length=50)),
                ('inline', models.CharField(blank=True, choices=[('', 'not inline'), ('-inline', 'inline')], default='', max_length=10)),
                ('direction', models.CharField(blank=True, choices=[('column', 'column'), ('column-reverse', 'column-reverse'), ('row', 'row'), ('row-reverse', 'row-reverse')], default='', max_length=20)),
                ('flex_wrap', models.CharField(blank=True, choices=[('-wrap', 'wrap'), ('-nowrap', 'no wrap'), ('-wrap-reverse', 'wrap reverse')], default='', help_text='\n            wrap of the content inside flex container\n            in one row if no wrap\n            in multiple rows in wrap\n            multiple rows from bottom in wrap reverse\n        ', max_length=15)),
                ('justify_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-between', 'between'), ('-evenly', 'evenly')], default='', help_text='\n            alignment of content on the main axis:\n            x if direction is row;\n            y if direction is column.\n        ', max_length=10)),
                ('align_items', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            alignment of content on the cross axis:\n            y if direction is row;\n            x if direction is column.\n        ', max_length=10)),
                ('align_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-stretch', 'stretch')], default='', help_text='\n            align all the  content\n            on the cross axis if there is space \n        ', max_length=10)),
                ('flex_grow', models.IntegerField(blank=True, default=1, help_text='\n        \n        ', null=True)),
                ('container', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Acms.container')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Acms.section')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CSS_id', models.CharField(blank=True, default='', help_text='set id of div', max_length=50)),
                ('CSS_classes', models.TextField(blank=True, default='', help_text='additional css classes')),
                ('padding_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('margin_sides', models.CharField(blank=True, choices=[('t', 'top'), ('b', 'bottom'), ('s', 'left'), ('e', 'right'), ('x', 'left and right'), ('y', 'top and bottom'), ('', 'all margins')], default='', max_length=5)),
                ('breakpoint', models.CharField(blank=True, choices=[('-sm', 'sm'), ('-md', 'md'), ('-lg', 'lg'), ('-xl', 'xl'), ('-xxl', 'xxl'), ('-fluid', 'fluid'), ('', 'no breakpoint')], default='', help_text='breakpoint work from the point indicated forward meaning that the content is 100percent until the breakpoint', max_length=10)),
                ('bg_image', models.ImageField(blank=True, default='', upload_to='')),
                ('bg_color', models.CharField(blank=True, choices=[('bg-primary', 'blue'), ('bg-secondary', 'grey'), ('bg-success', 'green'), ('bg-danger', 'red'), ('bg-warning', 'yellow'), ('bg-info', 'lightblue'), ('bg-light', 'light'), ('bg-dark', 'dark'), ('bg-body', 'body'), ('bg-white', 'white'), ('bg-transparent', 'transparent'), ('', 'no bg color')], default='', max_length=15)),
                ('bg_gradient', models.CharField(blank=True, choices=[('.bg-gradient', 'bottom-top gradient'), ('', 'no gradient')], default='', max_length=20)),
                ('shadow', models.CharField(blank=True, choices=[('shadow-sm', 'small shadow'), ('shadow', 'normal shadow'), ('shadow-lg', 'large shadow'), ('', 'no value')], default='', max_length=20)),
                ('position', models.CharField(blank=True, choices=[('position-static', 'static'), ('position-relative', 'relative'), ('position-absolute', 'absolute'), ('position-fixed', 'fixed'), ('position-sticky', 'sticky')], default='', max_length=20)),
                ('top', models.IntegerField(blank=True, default=0, null=True)),
                ('left', models.IntegerField(blank=True, default=0, null=True)),
                ('down', models.IntegerField(blank=True, default=0, null=True)),
                ('right', models.IntegerField(blank=True, default=0, null=True)),
                ('order', models.CharField(blank=True, choices=[('order-0', '0'), ('order-1', '1'), ('order-2', '2'), ('order-3', '3'), ('order-4', '4'), ('order-5', '5'), ('', 'no order')], default='order-0', max_length=20)),
                ('align_self', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            align the item on the\n            vertical axis in a flex container\n        ', max_length=10)),
                ('visibility', models.CharField(blank=True, choices=[('visible', 'visible'), ('invisible', 'invisible'), ('', 'no value')], default='', max_length=15)),
                ('display', models.CharField(blank=True, choices=[('-none', 'none'), ('-inline', 'inline'), ('-block', 'block'), ('-flex', 'flex')], default='', max_length=50)),
                ('inline', models.CharField(blank=True, choices=[('', 'not inline'), ('-inline', 'inline')], default='', max_length=10)),
                ('direction', models.CharField(blank=True, choices=[('column', 'column'), ('column-reverse', 'column-reverse'), ('row', 'row'), ('row-reverse', 'row-reverse')], default='', max_length=20)),
                ('flex_wrap', models.CharField(blank=True, choices=[('-wrap', 'wrap'), ('-nowrap', 'no wrap'), ('-wrap-reverse', 'wrap reverse')], default='', help_text='\n            wrap of the content inside flex container\n            in one row if no wrap\n            in multiple rows in wrap\n            multiple rows from bottom in wrap reverse\n        ', max_length=15)),
                ('justify_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-between', 'between'), ('-evenly', 'evenly')], default='', help_text='\n            alignment of content on the main axis:\n            x if direction is row;\n            y if direction is column.\n        ', max_length=10)),
                ('align_items', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-baseline', 'baseline'), ('-stretch', 'stretch')], default='', help_text='\n            alignment of content on the cross axis:\n            y if direction is row;\n            x if direction is column.\n        ', max_length=10)),
                ('align_content', models.CharField(blank=True, choices=[('-start', 'start'), ('-center', 'center'), ('-end', 'end'), ('-around', 'around'), ('-stretch', 'stretch')], default='', help_text='\n            align all the  content\n            on the cross axis if there is space \n        ', max_length=10)),
                ('flex_grow', models.IntegerField(blank=True, default=1, help_text='\n        \n        ', null=True)),
                ('stretched_link', models.CharField(blank=True, choices=[('', 'not stretched'), ('stretched-link', 'stretched')], max_length=15, null=True)),
                ('container', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Acms.container')),
                ('overlay', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Acms.overlay')),
                ('textShown', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Acms.text')),
                ('toPage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Acms.page')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='container',
            name='images',
            field=models.ManyToManyField(to='Acms.Image'),
        ),
        migrations.AddField(
            model_name='container',
            name='section',
            field=models.ManyToManyField(to='Acms.Section'),
        ),
        migrations.AddField(
            model_name='container',
            name='texts',
            field=models.ManyToManyField(to='Acms.Text'),
        ),
    ]
